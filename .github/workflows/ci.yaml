on:
    push:
        branches:
            - main
    pull_request:

name: CI

jobs:
    php-cs-fixer:
        name: PHP-CS-Fixer

        runs-on: ubuntu-latest

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v2

            - name: PHP-CS-Fixer
              uses: docker://oskarstark/php-cs-fixer-ga:2.16.7
              with:
                  args: --diff --dry-run

    composer-normalize:
        name: composer-normalize

        runs-on: ubuntu-latest

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v2

            - name: composer-normalize
              uses: docker://ergebnis/composer-normalize-action:0.8.0

    phpstan:
        name: PHPStan

        runs-on: ubuntu-latest

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v2

            - name: PHPStan
              uses: docker://oskarstark/phpstan-ga:0.12.56
              with:
                  args: analyse src --level=7

    tests:
        name: "PHP ${{ matrix.php-version }} + ${{ matrix.dependencies }}"

        runs-on: ubuntu-latest

        continue-on-error: ${{ matrix.allowed-to-fail }}

        strategy:
            matrix:
                php-version:
                    - '7.2'
                    - '7.3'
                    - '7.4'
                    - '8.0'
                dependencies:
                    - 'lowest'
                    - 'highest'
                allowed-to-fail: [false]

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v2

            - name: Install PHP with extensions
              uses: shivammathur/setup-php@2.7.0
              with:
                  coverage: "none"
                  php-version: "${{ matrix.php-version }}"
                  tools: "composer:v2"

            - name: Add PHPUnit matcher
              run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            - name: "Remove friendsofphp/php-cs-fixer for PHP 8"
              if: matrix.php-version == '8.0'
              run: composer remove --dev friendsofphp/php-cs-fixer

            - name: "Composer install"
              uses: "ramsey/composer-install@v1"
              with:
                  dependency-versions: "${{ matrix.dependencies }}"
                  composer-options: "--prefer-dist"

            - name: Run tests
              run: vendor/bin/phpunit -v

    auto-merge:
        name: "Auto-Merge"

        needs:
            - "php-cs-fixer"
            - "composer-normalize"
            - "tests"

        runs-on: "ubuntu-latest"

        if: >
            github.event_name == 'pull_request' &&
            github.event.pull_request.draft == false &&
            (
                github.event.action == 'opened' ||
                github.event.action == 'reopened' ||
                github.event.action == 'synchronize'
            ) &&
            (
                (
                    github.actor == 'dependabot[bot]' && startsWith(github.event.pull_request.title, 'github-actions(deps)')
                ) ||
                contains(github.event.pull_request.labels.*.name, 'merge')
            )

        steps:
            -
                name: "Request review from @gansel-bot"
                uses: "actions/github-script@v3"
                with:
                    github-token: "${{ secrets.GITHUB_TOKEN }}"
                    script: |
                        const pullRequest = context.payload.pull_request
                        const repository = context.repo

                        const reviewers = [
                            "gansel-bot",
                        ]

                        await github.pulls.requestReviewers({
                            owner: repository.owner,
                            pull_number: pullRequest.number,
                            repo: repository.repo,
                            reviewers: reviewers,
                        })

            -
                name: "Assign @gansel-bot"
                uses: "actions/github-script@v3"
                with:
                    github-token: "${{ secrets.GITHUB_TOKEN }}"
                    script: |
                        const pullRequest = context.payload.pull_request
                        const repository = context.repo

                        const reviewers = [
                            "gansel-bot",
                        ]

                        await github.issues.addAssignees({
                            assignees: reviewers,
                            issue_number: pullRequest.number,
                            owner: repository.owner,
                            repo: repository.repo,
                        })

            -
                name: "Approve pull request"
                uses: "actions/github-script@v3"
                if: "github.actor != 'gansel-bot'"
                with:
                    github-token: "${{ secrets.GITHUB_TOKEN }}"
                    script: |
                        const pullRequest = context.payload.pull_request
                        const repository = context.repo

                        await github.pulls.createReview({
                            event: "APPROVE",
                            owner: repository.owner,
                            pull_number: pullRequest.number,
                            repo: repository.repo,
                        })

            -
                name: "Merge pull request"
                uses: "actions/github-script@v3"
                with:
                    github-token: "${{ secrets.GITHUB_TOKEN }}"
                    script: |
                        const pullRequest = context.payload.pull_request
                        const repository = context.repo

                        await github.pulls.merge({
                            merge_method: "rebase",
                            owner: repository.owner,
                            pull_number: pullRequest.number,
                            repo: repository.repo,
                        })
